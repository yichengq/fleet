package registry

import (
	"path"
)

const (
	signingPrefix = "/signing/"
)

func (r *Registry) CreateSignature(key string, signs [][]byte) error {
	key = path.Join(keyPrefix, signingPrefix, key)
	json, _ := marshal(signs)
	_, err := r.etcd.Create(key, json, 0)
	if err != nil {
		return err
	}
	return err
}

func (r *Registry) DestroySignature(key string) {
	key = path.Join(keyPrefix, signingPrefix, key)
	r.etcd.Delete(key, false)
}

func (r *Registry) GetSignature(key string) [][]byte {
	key = path.Join(keyPrefix, signingPrefix, key)
	resp, err := r.etcd.Get(key, false, true)

	// Assume the error was KeyNotFound and return an empty data structure
	if err != nil {
		return nil
	}

	var signs [][]byte
	//TODO: Handle the error generated by unmarshal
	unmarshal(resp.Node.Value, &signs)

	return signs
}
